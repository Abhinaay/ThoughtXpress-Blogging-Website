import { __decorate } from 'tslib';
import { BrowserModule } from '@angular/platform-browser';
import { ɵɵdefineInjectable, Injectable, Input, Component, NgModule } from '@angular/core';
import { BehaviorSubject } from 'rxjs';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = function (a0, a1) { return { "top": a0, "left": a1 }; };
function DynamicLoaderComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵelement(1, "div", 4);
    ɵngcc0.ɵɵelement(2, "div", 5);
    ɵngcc0.ɵɵelement(3, "div", 6);
    ɵngcc0.ɵɵelement(4, "div", 7);
    ɵngcc0.ɵɵelement(5, "div", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r475 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction2(1, _c0, ctx_r475.top, ctx_r475.left));
} }
function DynamicLoaderComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelement(1, "div", 10);
    ɵngcc0.ɵɵelementEnd();
} }
const _c1 = function (a0, a1, a2) { return { "show": a0, "hide": a1, "cover-spin": a2 }; };
const Constant = {
    LoaderType: {
        'rectangleFlip': 'rectangle-flip',
        'circularEffect': 'circular-effect'
    }
};

let DynamicLoaderService = class DynamicLoaderService {
    constructor() {
        this.subject = new BehaviorSubject(null);
    }
    getLoaderData() {
        return this.subject.asObservable();
    }
    show() {
        this.subject.next({ show: true });
    }
    hide() {
        this.subject.next({ show: false });
    }
};
DynamicLoaderService.ɵfac = function DynamicLoaderService_Factory(t) { return new (t || DynamicLoaderService)(); };
DynamicLoaderService.ɵprov = ɵɵdefineInjectable({ factory: function DynamicLoaderService_Factory() { return new DynamicLoaderService(); }, token: DynamicLoaderService, providedIn: "root" });

let DynamicLoaderComponent = class DynamicLoaderComponent {
    constructor(loaderService) {
        this.loaderService = loaderService;
        /**
         * Set constant
         */
        this.constant = Constant;
        /**
         * To show or hide loader
         */
        this.isShow = false;
    }
    /**
     * Initialization Method
     */
    ngOnInit() {
        console.log(this.isFullScreen);
        this.loaderService.getLoaderData().subscribe(loaderData => {
            if (loaderData) {
                loaderData.show ? this.isShow = true : this.isShow = false; // Toggle loader
            }
        });
        if (!this.loaderType) {
            this.loaderType = this.constant.LoaderType.circularEffect; // Set Loader Type
        }
        if (this.isFullScreen == undefined) {
            this.isFullScreen = true;
        }
    }
    ngOnDestroy() {
        this.isFullScreen = undefined;
    }
};
DynamicLoaderComponent.ɵfac = function DynamicLoaderComponent_Factory(t) { return new (t || DynamicLoaderComponent)(ɵngcc0.ɵɵdirectiveInject(DynamicLoaderService)); };
DynamicLoaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DynamicLoaderComponent, selectors: [["dynamic-loader"]], inputs: { loaderType: "loaderType", isFullScreen: "isFullScreen", top: "top", left: "left", right: "right", bottom: "bottom" }, decls: 3, vars: 7, consts: [[3, "ngClass"], ["class", "a loader-wrapper", "style", "--n: 5", 3, "ngStyle", 4, "ngIf"], ["class", "loader-wrapper", 4, "ngIf"], [1, "a", "loader-wrapper", 2, "--n", "5", 3, "ngStyle"], [1, "dot", 2, "--i", "0"], [1, "dot", 2, "--i", "1"], [1, "dot", 2, "--i", "2"], [1, "dot", 2, "--i", "3"], [1, "dot", 2, "--i", "4"], [1, "loader-wrapper"], [1, "cp-spinner", "cp-flip"]], template: function DynamicLoaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, DynamicLoaderComponent_div_1_Template, 6, 4, "div", 1);
        ɵngcc0.ɵɵtemplate(2, DynamicLoaderComponent_div_2_Template, 2, 0, "div", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(3, _c1, ctx.isShow === true, ctx.isShow === false, ctx.isFullScreen === true));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.constant.LoaderType.circularEffect === ctx.loaderType);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.constant.LoaderType.rectangleFlip === ctx.loaderType);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgStyle], styles: [".hide[_ngcontent-%COMP%]{display:none}.show[_ngcontent-%COMP%]{display:flex}.cover-spin[_ngcontent-%COMP%]{position:fixed;z-index:9999;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:rgba(0,0,0,.4)}@-webkit-keyframes float{to{transform:translateY(.75em)}}@keyframes float{to{transform:translateY(.75em)}}.dot[_ngcontent-%COMP%]{background:tomato}.dot[_ngcontent-%COMP%], .dot[_ngcontent-%COMP%]:after{display:inline-block;width:2em;height:2em;border-radius:50%;-webkit-animation:a 1.5s calc(((var(--i) + var(--o,0))/ var(--n) - 1) *1.5s) infinite;animation:a 1.5s calc(((var(--i) + var(--o,0))/ var(--n) - 1) *1.5s) infinite}.dot[_ngcontent-%COMP%]:after{--o:1;background-color:#f5f5f5;content:\"\"}@-webkit-keyframes a{0%,50%{transform:scale(0)}}@keyframes a{0%,50%{transform:scale(0)}}.loader-wrapper[_ngcontent-%COMP%]{position:fixed;top:50%;left:50%}.cp-spinner[_ngcontent-%COMP%]{width:48px;height:48px;display:inline-block;box-sizing:border-box;position:relative}.cp-flip[_ngcontent-%COMP%]{transform-style:preserve-3d;perspective:10em}.cp-flip[_ngcontent-%COMP%]:before{width:48px;height:48px;display:inline-block;box-sizing:border-box;background:tomato;content:\" \";position:absolute;top:0;left:0;-webkit-animation:2s linear infinite cp-flip-animate-before;animation:2s linear infinite cp-flip-animate-before}@-webkit-keyframes cp-flip-animate-before{0%,100%{transform:rotateY(0) rotateX(0)}25%{transform:rotateY(360deg) rotateX(0)}50%{transform:rotateY(360deg) rotateX(360deg)}75%{transform:rotateY(0) rotateX(360deg)}}@keyframes cp-flip-animate-before{0%,100%{transform:rotateY(0) rotateX(0)}25%{transform:rotateY(360deg) rotateX(0)}50%{transform:rotateY(360deg) rotateX(360deg)}75%{transform:rotateY(0) rotateX(360deg)}}"] });
DynamicLoaderComponent.ctorParameters = () => [
    { type: DynamicLoaderService }
];
__decorate([
    Input('loaderType')
], DynamicLoaderComponent.prototype, "loaderType", void 0);
__decorate([
    Input('isFullScreen')
], DynamicLoaderComponent.prototype, "isFullScreen", void 0);
__decorate([
    Input('top')
], DynamicLoaderComponent.prototype, "top", void 0);
__decorate([
    Input('left')
], DynamicLoaderComponent.prototype, "left", void 0);
__decorate([
    Input('right')
], DynamicLoaderComponent.prototype, "right", void 0);
__decorate([
    Input('bottom')
], DynamicLoaderComponent.prototype, "bottom", void 0);

let DynamicLoaderModule = class DynamicLoaderModule {
};
DynamicLoaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DynamicLoaderModule });
DynamicLoaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DynamicLoaderModule_Factory(t) { return new (t || DynamicLoaderModule)(); }, imports: [[
            BrowserModule
        ]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DynamicLoaderService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DynamicLoaderComponent, [{
        type: Component,
        args: [{
                selector: 'dynamic-loader',
                template: "<div [ngClass]=\"{'show' : isShow === true , 'hide' : isShow === false,'cover-spin' : isFullScreen === true}\">\r\n  <div *ngIf=\"constant.LoaderType.circularEffect === loaderType\" class=\"a loader-wrapper\" style=\"--n: 5\"\r\n    [ngStyle]=\"{'top': top ,'left': left}\">\r\n    <div class=\"dot\" style=\"--i: 0\"></div>\r\n    <div class=\"dot\" style=\"--i: 1\"></div>\r\n    <div class=\"dot\" style=\"--i: 2\"></div>\r\n    <div class=\"dot\" style=\"--i: 3\"></div>\r\n    <div class=\"dot\" style=\"--i: 4\"></div>\r\n  </div>\r\n  <div *ngIf=\"constant.LoaderType.rectangleFlip === loaderType\" class=\"loader-wrapper\">\r\n    <div class=\"cp-spinner cp-flip\"></div>\r\n  </div>\r\n</div>\r\n",
                styles: [".hide{display:none}.show{display:flex}.cover-spin{position:fixed;z-index:9999;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:rgba(0,0,0,.4)}@-webkit-keyframes float{to{transform:translateY(.75em)}}@keyframes float{to{transform:translateY(.75em)}}.dot{background:tomato}.dot,.dot:after{display:inline-block;width:2em;height:2em;border-radius:50%;-webkit-animation:a 1.5s calc(((var(--i) + var(--o,0))/ var(--n) - 1) *1.5s) infinite;animation:a 1.5s calc(((var(--i) + var(--o,0))/ var(--n) - 1) *1.5s) infinite}.dot:after{--o:1;background-color:#f5f5f5;content:\"\"}@-webkit-keyframes a{0%,50%{transform:scale(0)}}@keyframes a{0%,50%{transform:scale(0)}}.loader-wrapper{position:fixed;top:50%;left:50%}.cp-spinner{width:48px;height:48px;display:inline-block;box-sizing:border-box;position:relative}.cp-flip{transform-style:preserve-3d;perspective:10em}.cp-flip:before{width:48px;height:48px;display:inline-block;box-sizing:border-box;background:tomato;content:\" \";position:absolute;top:0;left:0;-webkit-animation:2s linear infinite cp-flip-animate-before;animation:2s linear infinite cp-flip-animate-before}@-webkit-keyframes cp-flip-animate-before{0%,100%{transform:rotateY(0) rotateX(0)}25%{transform:rotateY(360deg) rotateX(0)}50%{transform:rotateY(360deg) rotateX(360deg)}75%{transform:rotateY(0) rotateX(360deg)}}@keyframes cp-flip-animate-before{0%,100%{transform:rotateY(0) rotateX(0)}25%{transform:rotateY(360deg) rotateX(0)}50%{transform:rotateY(360deg) rotateX(360deg)}75%{transform:rotateY(0) rotateX(360deg)}}"]
            }]
    }], function () { return [{ type: DynamicLoaderService }]; }, { loaderType: [{
            type: Input,
            args: ['loaderType']
        }], isFullScreen: [{
            type: Input,
            args: ['isFullScreen']
        }], top: [{
            type: Input,
            args: ['top']
        }], left: [{
            type: Input,
            args: ['left']
        }], right: [{
            type: Input,
            args: ['right']
        }], bottom: [{
            type: Input,
            args: ['bottom']
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicLoaderModule, { declarations: function () { return [DynamicLoaderComponent]; }, imports: function () { return [BrowserModule]; }, exports: function () { return [DynamicLoaderComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DynamicLoaderModule, [{
        type: NgModule,
        args: [{
                declarations: [DynamicLoaderComponent],
                imports: [
                    BrowserModule
                ],
                exports: [DynamicLoaderComponent]
            }]
    }], null, null); })();

/*
 * Public API Surface of dynamic-loader
 */

/**
 * Generated bundle index. Do not edit.
 */

export { DynamicLoaderComponent, DynamicLoaderModule, DynamicLoaderService };

//# sourceMappingURL=angular-dynamic-loader.js.map
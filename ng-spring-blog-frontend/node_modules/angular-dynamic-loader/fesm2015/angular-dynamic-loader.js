import { __decorate } from 'tslib';
import { BrowserModule } from '@angular/platform-browser';
import { ɵɵdefineInjectable, Injectable, Input, Component, NgModule } from '@angular/core';
import { BehaviorSubject } from 'rxjs';

const Constant = {
    LoaderType: {
        'rectangleFlip': 'rectangle-flip',
        'circularEffect': 'circular-effect'
    }
};

let DynamicLoaderService = class DynamicLoaderService {
    constructor() {
        this.subject = new BehaviorSubject(null);
    }
    getLoaderData() {
        return this.subject.asObservable();
    }
    show() {
        this.subject.next({ show: true });
    }
    hide() {
        this.subject.next({ show: false });
    }
};
DynamicLoaderService.ɵprov = ɵɵdefineInjectable({ factory: function DynamicLoaderService_Factory() { return new DynamicLoaderService(); }, token: DynamicLoaderService, providedIn: "root" });
DynamicLoaderService = __decorate([
    Injectable({
        providedIn: 'root'
    })
], DynamicLoaderService);

let DynamicLoaderComponent = class DynamicLoaderComponent {
    constructor(loaderService) {
        this.loaderService = loaderService;
        /**
         * Set constant
         */
        this.constant = Constant;
        /**
         * To show or hide loader
         */
        this.isShow = false;
    }
    /**
     * Initialization Method
     */
    ngOnInit() {
        console.log(this.isFullScreen);
        this.loaderService.getLoaderData().subscribe(loaderData => {
            if (loaderData) {
                loaderData.show ? this.isShow = true : this.isShow = false; // Toggle loader
            }
        });
        if (!this.loaderType) {
            this.loaderType = this.constant.LoaderType.circularEffect; // Set Loader Type
        }
        if (this.isFullScreen == undefined) {
            this.isFullScreen = true;
        }
    }
    ngOnDestroy() {
        this.isFullScreen = undefined;
    }
};
DynamicLoaderComponent.ctorParameters = () => [
    { type: DynamicLoaderService }
];
__decorate([
    Input('loaderType')
], DynamicLoaderComponent.prototype, "loaderType", void 0);
__decorate([
    Input('isFullScreen')
], DynamicLoaderComponent.prototype, "isFullScreen", void 0);
__decorate([
    Input('top')
], DynamicLoaderComponent.prototype, "top", void 0);
__decorate([
    Input('left')
], DynamicLoaderComponent.prototype, "left", void 0);
__decorate([
    Input('right')
], DynamicLoaderComponent.prototype, "right", void 0);
__decorate([
    Input('bottom')
], DynamicLoaderComponent.prototype, "bottom", void 0);
DynamicLoaderComponent = __decorate([
    Component({
        selector: 'dynamic-loader',
        template: "<div [ngClass]=\"{'show' : isShow === true , 'hide' : isShow === false,'cover-spin' : isFullScreen === true}\">\r\n  <div *ngIf=\"constant.LoaderType.circularEffect === loaderType\" class=\"a loader-wrapper\" style=\"--n: 5\"\r\n    [ngStyle]=\"{'top': top ,'left': left}\">\r\n    <div class=\"dot\" style=\"--i: 0\"></div>\r\n    <div class=\"dot\" style=\"--i: 1\"></div>\r\n    <div class=\"dot\" style=\"--i: 2\"></div>\r\n    <div class=\"dot\" style=\"--i: 3\"></div>\r\n    <div class=\"dot\" style=\"--i: 4\"></div>\r\n  </div>\r\n  <div *ngIf=\"constant.LoaderType.rectangleFlip === loaderType\" class=\"loader-wrapper\">\r\n    <div class=\"cp-spinner cp-flip\"></div>\r\n  </div>\r\n</div>\r\n",
        styles: [".hide{display:none}.show{display:flex}.cover-spin{position:fixed;z-index:9999;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:rgba(0,0,0,.4)}@-webkit-keyframes float{to{transform:translateY(.75em)}}@keyframes float{to{transform:translateY(.75em)}}.dot{background:tomato}.dot,.dot:after{display:inline-block;width:2em;height:2em;border-radius:50%;-webkit-animation:a 1.5s calc(((var(--i) + var(--o,0))/ var(--n) - 1) *1.5s) infinite;animation:a 1.5s calc(((var(--i) + var(--o,0))/ var(--n) - 1) *1.5s) infinite}.dot:after{--o:1;background-color:#f5f5f5;content:\"\"}@-webkit-keyframes a{0%,50%{transform:scale(0)}}@keyframes a{0%,50%{transform:scale(0)}}.loader-wrapper{position:fixed;top:50%;left:50%}.cp-spinner{width:48px;height:48px;display:inline-block;box-sizing:border-box;position:relative}.cp-flip{transform-style:preserve-3d;perspective:10em}.cp-flip:before{width:48px;height:48px;display:inline-block;box-sizing:border-box;background:tomato;content:\" \";position:absolute;top:0;left:0;-webkit-animation:2s linear infinite cp-flip-animate-before;animation:2s linear infinite cp-flip-animate-before}@-webkit-keyframes cp-flip-animate-before{0%,100%{transform:rotateY(0) rotateX(0)}25%{transform:rotateY(360deg) rotateX(0)}50%{transform:rotateY(360deg) rotateX(360deg)}75%{transform:rotateY(0) rotateX(360deg)}}@keyframes cp-flip-animate-before{0%,100%{transform:rotateY(0) rotateX(0)}25%{transform:rotateY(360deg) rotateX(0)}50%{transform:rotateY(360deg) rotateX(360deg)}75%{transform:rotateY(0) rotateX(360deg)}}"]
    })
], DynamicLoaderComponent);

let DynamicLoaderModule = class DynamicLoaderModule {
};
DynamicLoaderModule = __decorate([
    NgModule({
        declarations: [DynamicLoaderComponent],
        imports: [
            BrowserModule
        ],
        exports: [DynamicLoaderComponent]
    })
], DynamicLoaderModule);

/*
 * Public API Surface of dynamic-loader
 */

/**
 * Generated bundle index. Do not edit.
 */

export { DynamicLoaderComponent, DynamicLoaderModule, DynamicLoaderService };
//# sourceMappingURL=angular-dynamic-loader.js.map
